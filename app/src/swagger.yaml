swagger: '2.0'
info:
  description: >-
    JES user-service documentation for api
  version: 1.0.0
  title: JES-USERSERVICE
  contact:
    email: jes.vrgame@gmail.com
host: jes.api.user.safesuk.me
basePath: /v1
tags:
  - name: user
    description: Operations about user
schemes:
  - http
paths:
  /users/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
                auth:
                  type: boolean
                token:
                  type: string
            example:
              auth: true
              token: "eyJhbGci;eyJhbGcieyJhbGcieyJhbGcieyJhbGcieyJhbGcieyJhbGci"
          headers:
            access_token:
              description: access token of jes service
              type: string
        '401':
          description: Unauthorize
  /users/logout:
    get:
      tags:
        - user
      summary: Logs out the system
      description: ''
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
          schema:
            type: object
            properties:
              auth:
                type: boolean
  '/users/{id}':
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    properties:
      id:
        type: string
        format: objectId
      username:
        type: string
      email:
        type: string
      password:
        type: string
      friends:
        type: array
        items:
          type: string
          format: objectId
          description: User.id
    xml:
      name: Users